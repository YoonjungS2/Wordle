<div class="row">
    <div class="col">
        <h1 class="text-center mt-3">도서검색</h1>
        <!-- 도서명 검색 -->
        <div class="row justify-content-end my-2">
            <form class="col-6 col-md-4 col-lg-3" name="frm">
            <!-- 해상도(창크기)에 따라 고해상도 6칸 / 중해상도 4칸 / 저해상도 3칸 -->
                <div class="input-group">
                    <input class="form-control" name="query" value="자바">
                    <button class="btn btn-primary">검색</button>
                </div>
            </form>
        </div>

        <!-- 도서 검색 목록 -->
        <div id="div_books"></div>

        <!--페이지 이동버튼-->
        <div class="text-center">
            <button id="prev" class="btn btn-primary">이전</button>
            <span id="span_page" class="mx-3">1/10</span>
            <!-- mx-3 : 좌우 마진 3 -->
            <button id="next" class="btn btn-primary">다음</button>
        </div>
    </div>
</div>
<!--도서목록 템플릿-->
<script type="x-handlebars-template" id="temp_books">
    <table class="table table-striped">
        {{#each documents}}
            <tr>
                <!-- 변수명 찍을 때 중괄호 두개 -->
                <td><img src="{{check thumbnail}}" width="50"></td>
                <td>{{title}}</td>
                <td>{{format price}}</td>
                <td>{{authors}}</td>
                <td><button class="btn btn-primary" index="{{@index}}">도서정보</button></td>
                <!-- 템플릿 템플릿으로 index 변수를 동적 생성하기 때문에 변수명 index 앞에 @이 붙음 (index 속성값은 반복요소의 인덱스(도서 목록에서의 도서 순서 할당)) -->
            </tr>
            <%-include('modal.ejs')%>
        {{/each}}
    </table>
</script>
<script>

    // 도서의 사진이 없을 경우 더미사진을 대체하기 위한 registerHelper 함수 정의
    // 함수명 : check / 매개변수 thumnail을 받음
    Handlebars.registerHelper("check", function(thumbnail){
         if(thumbnail){
             return thumbnail;
         }else{
             return "http://via.placeholder.com/120x170";
         }
     });
 
     Handlebars.registerHelper("format", function(price){
        return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '원';
        // 매개변수 price를 문자열로 변환하고 천 단위로 쉼표를 추가.뒤에 “원” 문자열로 붙여 변환
        })
 </script>

<script>
    // let : 자바스크립트에서 변수를 선언
    let query=$(frm.query).val();
    // frm query의 값을 전역변수 query에 담음
    let page=1;

    // 사용자 함수 getBooks 호출
    getBooks();

    //도서정보 버튼을 눌렀을 때
    $("#div_books").on("click", ".btn-primary", function(){
        // name을 가진 객체를 선택 시 따로 붙는 기호 X / id는 #
        let index=$(this).attr("index");
        // 변수 index에 현재 클릭된 요소(attr)의 ‘index’ 속성값을 가져옴
        $("#modal" + index).modal("show");
        // 클릭된 버튼의 “index” 값에 따라 특정 ID를 가진 모달을 팝업창으로 표시
    })

    $(frm).on("submit", function(e){
        // 새로운 키워드로 검색할 때마다 페이지 수 초기화
        e.preventDefault(); //submit 이벤트를 막아준다.
        query=$(frm.query).val();
        getBooks();
        // 전역변수 query에 frm.query 값을 받아와 getBooks 함수를 재호출하여 검색
    });

    //다음 버튼을 클릭한 경우
    $("#next").on("click", function(){
        page++;
        getBooks();
    });

    //이전 버튼을 클릭한 경우
    $("#prev").on("click", function(){
        page--;
        getBooks();
    });

    //도서검색 목록 가지고 오기
    function getBooks(){
        $.ajax({ //$.ajax : 외부 API로 요청을 보내 그 API로부터 정보를 가져옴
            type:"get",
            url:"https://dapi.kakao.com/v3/search/book?target=title",
            headers:{"Authorization":"KakaoAK 87198194c0404fa3586c6ca874e40491"},
            data:{query:query, page:page, size:5},
            // data 속성 : AJAX 요청으로 서버에 보낼 데이터 정의 (query, page, size) 
            // 각각 사용자가 입력한 검색어, 현재 페이지, 5를 할당, 한페이지에 5개씩 출력
            success:function(result){ //AJAX 요청의 결과를 받아 success 함수 정의
                console.log(result);
                //콘솔을 통해 출력 결과를 확인할 수 있음
                let temp=Handlebars.compile($("#temp_books").html());
                //도서목록을 HTML로 변환하기 위해 템플릿을 컴파일 , 중간고사 언급(#temp_books)
                $("#div_books").html(temp(result)); // 중간고사 언급(result)
                // temp(html로 변환해서), result데이터를 html로 변환한 결과(도서목록)을 div_books에 표시
                let last = Math.ceil(data.meta.pageable_count/5);
                // Math.ceil 함수 사용하여 마지막 페이지 값 계산 
                // 전체 아이템수/5 (페이지당 5개 아이템 표시하도록 설정)
                $("#span_page").html(page + "/" + last);

                // ★데이터 가져오기 > result에 담기 - 컴파일 - 템플릿에 result 담기


                // 1페이지에서 이전버튼 비활성화
                if(page==1) $("#prev").attr("disabled", true);
                else $("#prev").attr("disabled", false);

                //마지막 페이지에서 다음버튼 비활성화
                if(data.meta.is_end) $("#next").attr("disabled", true);
                else $("#next").attr("disabled", false);
            }
        });
    }
</script>